.table {
  thead {
    tr {
      td,th {
        border-bottom-width: 1px;

      }
    }
  }
  thead,tbody {
    tr {
      th {
        font-weight: 500;
      }
    }
  }
}
.table.table-middle {
  tbody {
    tr {
      td,th {
        vertical-align: middle;
      }
    }
  }
}
.table.table-compact {
  thead,tbody {
    tr {
      td,th {
        padding: 0.75rem 0.5rem;
      }
    }
  }
}
.table-material {
  thead,tbody {
    tr {
      td,th {
        &:first-child {
          padding-left: 2rem;
        }
        &:last-child {
          padding-right: 2rem;
        }
      }
    }
  }
}


@mixin responsive-table-generate() {
  thead,tbody {
    tr {
      display: flex;
      flex-wrap: wrap;
      border-top: 1px solid $gray-200;
      td,th {
        border: none;
        padding: 0.75rem 0.75rem 0.75rem 1.5em;
        &.rt-full {
          flex-basis: 100%;
          flex-shrink: 0;
          padding: 0.75rem 1.5rem 0.75rem 1.5rem;
        }
        &.rt-header {
          font-weight: 500;
        }
        &:first-child {
          padding-left: 1.5rem;
        }
        &:last-child {
          padding-right: 1.5rem;
          margin-bottom: 0.75rem;
        }
      }
    }
  }
  .rt-table-hide {
    display: none !important;
  }
  .rt-table-block {
    display: block !important;
  }
  .rt-table-inline {
    display: inline !important;
  }
  .progress {
    width: 100%;
  }
}
@function breakpoint-infix-max($name, $breakpoints: $grid-breakpoints) {
  @return if(breakpoint-max($name, $breakpoints) == null, "", "-#{$name}");
}

@each $breakpoint in map-keys($grid-breakpoints) {
  @include media-breakpoint-down($breakpoint) {
    $infix: breakpoint-infix-max($breakpoint, $grid-breakpoints);
    .rt#{$infix} {
      @include responsive-table-generate();
    }
  }
}

.datatable-header-cell {
  padding: 0.5rem 1rem;
}
.datatable-body-cell {
  padding: 0.5rem 1rem;
}
.dataTables_wrapper {
  select, input {
    width: 5rem;
    height: 2rem;
    padding: .375rem .75rem;
    font-size: 1rem;
    line-height: 1.5;
    border: 1px solid $gray-200;
  }
  input {
    width: 10rem;
  }
  .dataTables_paginate .paginate_button {
    &.current {
      background: $info !important;
      color: white!important;
    }
    &:hover {
      border-color: $gray-200 !important;
      box-shadow: noone;
      background: $gray-100 !important;
      color: $body-color !important;

    }
  }
}
.dataTable {

  border-color: $gray-200 !important;
  td,th {
    border-color: $gray-200 !important;
    padding: 1rem 0.75rem !important;
  }
}
